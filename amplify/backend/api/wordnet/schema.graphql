type WordNet
  @model
  @searchable
  # @key(fields: ["id", "createdAt"], name: "wordNetsByCreatedAt")
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  nodes: [Node!]! @connection(name: "NetworkNodes")
  edges: [Edge!]! @connection(name: "NetworkEdges")
  responses: [Response!]! @connection(name: "NetworkResponses")
  createdAt: AWSDateTime
  modifiedAt: AWSDateTime
  timestamp: AWSTimestamp!
}

type Node @model @searchable @auth(rules: [{ allow: owner }]) {
  id: ID!
  value: String!
  depth: Int
  radius: Int
  color: String
  network: WordNet! @connection(name: "NetworkNodes")
  sources: [Edge!]! @connection(name: "EdgeSource")
  targets: [Edge!]! @connection(name: "EdgeTarget")
  responses: [Response!]! @connection(name: "NodeResponses")
  createdAt: AWSDateTime
}

type Edge @model @searchable @auth(rules: [{ allow: owner }]) {
  id: ID!
  source: Node! @connection(name: "EdgeSource")
  target: Node! @connection(name: "EdgeTarget")
  distance: Int!
  network: WordNet! @connection(name: "NetworkEdges")
  createdAt: AWSDateTime
}

type Response @model @searchable @auth(rules: [{ allow: owner }]) {
  id: ID!
  source: Node! @connection(name: "NodeResponses")
  value: String!
  network: WordNet! @connection(name: "NetworkResponses")
  responseTime: Int
  createdAt: AWSDateTime
}
