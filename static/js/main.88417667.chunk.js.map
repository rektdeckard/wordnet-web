{"version":3,"sources":["actions/settingsActions.js","actions/types.js","components/explore/Network.js","components/explore/History.js","components/learn/Learn.js","components/explore/Explore.js","components/play/Play.js","actions/graphActions.js","components/App.js","reducers/settingsReducer.js","reducers/graphRecuder.js","reducers/index.js","index.js"],"names":["updateSettings","settings","dispatch","type","payload","setDistanceMin","distanceMin","setDistanceMax","distanceMax","SubMenu","Menu","Content","Layout","Sider","connect","state","setRepulsivity","repulsivity","setIterations","iterations","setBorderWidth","borderWidth","setLinkThickness","linkThickness","setAnimate","animate","setMotionStiffness","motionStiffness","setMotionDamping","motionDamping","props","style","background","width","collapsedWidth","breakpoint","mode","selectable","defaultOpenKeys","height","key","title","Item","span","size","min","max","value","onChange","checked","doubleClick","window","innerHeight","innerWidth","nodes","data","links","nodeColor","n","color","nodeBorderWidth","nodeBorderColor","from","modifiers","linkColor","t","source","l","depth","History","useState","day","Date","setFullYear","getFullYear","to","emptyColor","colors","margin","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","Learn","version","xmlns","x","y","fill","withRouter","padding","exact","path","component","Network","nivo","graph","addElements","removeElement","token","randomNode","Math","floor","random","length","id","radius","entry","setEntry","currentNode","setCurrentNode","ceil","isInteractive","placeholder","allowClear","e","target","onPressEnter","tokens","Set","split","existingTokens","map","newNodes","filter","includes","existingLinks","newLinks","distance","Header","Footer","className","position","zIndex","theme","selectedKeys","location","pathname","lineHeight","flexGrow","Play","Explore","textAlign","INITIAL_STATE","rootReducer","combineReducers","action","filteredNodes","filteredLinks","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88417667.chunk.js","sourcesContent":["import { UPDATE_SETTING } from \"../actions/types\";\r\n\r\nconst updateSettings = settings => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_SETTING,\r\n    payload: settings\r\n  });\r\n};\r\n\r\n// TODO: Implement extra validation on each property, even though the UI layer should it too?\r\n\r\nexport const setRepulsivity = repulsivity => dispatch => {\r\n  dispatch(updateSettings({ repulsivity }));\r\n};\r\n\r\nexport const setDistanceMin = distanceMin => dispatch => {\r\n  dispatch(updateSettings({ distanceMin }));\r\n};\r\n\r\nexport const setDistanceMax = distanceMax => dispatch => {\r\n  dispatch(updateSettings({ distanceMax }));\r\n};\r\n\r\nexport const setIterations = iterations => dispatch => {\r\n  dispatch(updateSettings({ iterations }));\r\n};\r\n\r\nexport const setBorderWidth = borderWidth => dispatch => {\r\n  dispatch(updateSettings({ borderWidth }));\r\n};\r\n\r\nexport const setLinkThickness = linkThickness => dispatch => {\r\n  if (!linkThickness) linkThickness = 1;\r\n  if (linkThickness > 20) linkThickness = 20;\r\n  dispatch(updateSettings({ linkThickness }));\r\n};\r\n\r\nexport const setAnimate = animate => dispatch => {\r\n  dispatch(updateSettings({ animate }));\r\n};\r\n\r\nexport const setMotionStiffness = motionStiffness => dispatch => {\r\n  dispatch(updateSettings({ motionStiffness }));\r\n};\r\n\r\nexport const setMotionDamping = motionDamping => dispatch => {\r\n  dispatch(updateSettings({ motionDamping }));\r\n};\r\n","export const UPDATE_SETTING = \"update_setting\";\r\n\r\nexport const ADD_GRAPH_ELEMENTS = \"add_graph_elements\";\r\nexport const REMOVE_GRAPH_ELEMENT = \"remove_graph_element\";\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResponsiveNetwork } from \"@nivo/network\";\r\nimport { Layout, Menu, Icon, InputNumber, Row, Col, Switch } from \"antd\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\n\r\nimport data from \"../../data/sample.json\";\r\nimport {\r\n  setRepulsivity,\r\n  setDistanceMin,\r\n  setDistanceMax,\r\n  setIterations,\r\n  setBorderWidth,\r\n  setLinkThickness,\r\n  setAnimate,\r\n  setMotionStiffness,\r\n  setMotionDamping\r\n} from \"../../actions\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\n// const nivo = ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'];\r\n\r\nconst Network = props => {\r\n  const {\r\n    repulsivity,\r\n    distanceMin,\r\n    distanceMax,\r\n    iterations,\r\n    borderWidth,\r\n    linkThickness,\r\n    animate,\r\n    motionStiffness,\r\n    motionDamping\r\n  } = props.settings;\r\n\r\n  const handleChangeDistance = value => {\r\n    setDistanceMin(value[0]);\r\n    setDistanceMax(value[1]);\r\n  };\r\n\r\n  const renderSider = () => (\r\n    <Sider\r\n      style={{ background: \"#fff\" }}\r\n      width={300}\r\n      collapsedWidth={0}\r\n      breakpoint=\"lg\"\r\n    >\r\n      <Menu\r\n        mode=\"inline\"\r\n        selectable={false}\r\n        defaultOpenKeys={[\"sim\"]}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <SubMenu\r\n          key=\"sim\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"dot-chart\" />\r\n              Simulation\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"1\">\r\n            <Row>\r\n              <Col span={12}>Repulsivity</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={100}\r\n                  value={repulsivity}\r\n                  onChange={props.setRepulsivity}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Row>\r\n              <Col span={12}>Distance Min</Col>\r\n              <Col span={4}>\r\n                {\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={9999}\r\n                  value={distanceMin}\r\n                  onChange={props.setDistanceMin}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Row>\r\n              <Col span={12}>Distance Max</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={9999}\r\n                  value={distanceMax}\r\n                  onChange={props.setDistanceMax}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            <Row>\r\n              <Col span={12}>Iterations</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={60}\r\n                  max={260}\r\n                  value={iterations}\r\n                  onChange={props.setIterations}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"nodes\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"ellipsis\" />\r\n              Nodes\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"5\">\r\n            <Row>\r\n              <Col span={12}>Border Width</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={20}\r\n                  value={borderWidth}\r\n                  onChange={props.setBorderWidth}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"links\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"fork\" />\r\n              Links\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"6\">\r\n            <Row>\r\n              <Col span={12}>Link Thickness</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={20}\r\n                  value={linkThickness}\r\n                  onChange={props.setLinkThickness}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"motion\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"double-right\" />\r\n              Motion\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"7\">\r\n            <Row>\r\n              <Col span={12}>Animate</Col>\r\n              <Col span={4}>\r\n                <Switch\r\n                  size=\"small\"\r\n                  checked={animate}\r\n                  onChange={props.setAnimate}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"8\">\r\n            <Row>\r\n              <Col span={12}>Motion Stiffness</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={300}\r\n                  value={motionStiffness}\r\n                  onChange={props.setMotionStiffness}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"9\">\r\n            <Row>\r\n              <Col span={12}>Motion Damping</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={40}\r\n                  value={motionDamping}\r\n                  onChange={props.setMotionDamping}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n\r\n  // TODO: Implement window-resize event hook to properly size the container div\r\n  return (\r\n    <>\r\n      {renderSider()}\r\n      <Content>\r\n        <TransformWrapper doubleClick={{ mode: \"reset\" }}>\r\n          <TransformComponent>\r\n            <div style={{ height: (window.innerHeight - 300), width: (window.innerWidth - 400) }}>\r\n              <ResponsiveNetwork\r\n                // height={2000}\r\n                // width={3000}\r\n                nodes={data.nodes}\r\n                links={data.links}\r\n                repulsivity={repulsivity}\r\n                distanceMin={distanceMin}\r\n                distanceMax={distanceMax}\r\n                iterations={iterations}\r\n                nodeColor={n => n.color}\r\n                // nodeColor={n => `hsl(${360 - (60 * n.depth - 1)}, 40%, 60%)`}\r\n                // nodeColor={n => nivo[n.depth]}\r\n                nodeBorderWidth={borderWidth}\r\n                nodeBorderColor={{\r\n                  from: \"color\",\r\n                  modifiers: [[\"darker\", 0.8]]\r\n                }}\r\n                // nodeBorderColor={n => `hsl(${360 - (60 * n.depth - 1)}, 40%, 30%)`}\r\n                // nodeBorderColor={n => nivo[n.depth]}\r\n                linkColor={t => t.source.color}\r\n                // linkColor={n => `hsl(${360 - (2 * n.distance)}, 40%, 30%)`}\r\n                linkThickness={linkThickness ?? (l => 2 * (2 - l.source.depth))}\r\n                motionStiffness={motionStiffness}\r\n                motionDamping={motionDamping}\r\n                animate={animate}\r\n              />\r\n            </div>\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { settings: state.settings };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setRepulsivity,\r\n  setDistanceMin,\r\n  setDistanceMax,\r\n  setIterations,\r\n  setBorderWidth,\r\n  setLinkThickness,\r\n  setAnimate,\r\n  setMotionStiffness,\r\n  setMotionDamping\r\n})(Network);\r\n","import React, { useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst History = () => {\r\n  const [data, setData] = useState([\r\n    { day: \"2019-01-03\", value: 2 },\r\n    { day: \"2019-01-05\", value: 1 },\r\n    { day: \"2019-01-06\", value: 2 },\r\n    { day: \"2019-01-07\", value: 2 },\r\n    { day: \"2019-01-09\", value: 4 },\r\n    { day: \"2019-01-10\", value: 3 },\r\n    { day: \"2019-01-11\", value: 1 },\r\n    { day: \"2019-01-12\", value: 2 },\r\n    { day: \"2019-01-13\", value: 1 },\r\n    { day: \"2019-01-16\", value: 1 },\r\n    { day: \"2019-01-18\", value: 3 },\r\n    { day: \"2019-01-19\", value: 3 },\r\n    { day: \"2019-01-20\", value: 1 },\r\n    { day: \"2019-01-21\", value: 2 },\r\n    { day: \"2019-01-23\", value: 2 },\r\n    { day: \"2019-01-24\", value: 5 },\r\n    { day: \"2019-01-25\", value: 4 },\r\n    { day: \"2019-01-30\", value: 2 },\r\n    { day: \"2019-01-31\", value: 1 },\r\n    { day: \"2019-02-03\", value: 2 },\r\n    { day: \"2019-02-03\", value: 4 },\r\n    { day: \"2019-02-03\", value: 1 },\r\n    { day: \"2019-02-03\", value: 2 }\r\n  ]);\r\n\r\n  return (\r\n    <Content style={{ height: 700 }}>\r\n      <ResponsiveCalendar\r\n        data={data}\r\n        from={new Date(new Date().setFullYear(new Date().getFullYear() - 1))}\r\n        to={new Date()}\r\n        emptyColor=\"#eeeeee\"\r\n        colors={[\"#61cdbb\", \"#97e3d5\", \"#e8c1a0\", \"#f47560\"]}\r\n        margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n        yearSpacing={40}\r\n        monthBorderColor=\"#ffffff\"\r\n        dayBorderWidth={2}\r\n        dayBorderColor=\"#ffffff\"\r\n        legends={[\r\n          {\r\n            anchor: \"bottom-right\",\r\n            direction: \"row\",\r\n            translateY: 36,\r\n            itemCount: 4,\r\n            itemWidth: 42,\r\n            itemHeight: 36,\r\n            itemsSpacing: 14,\r\n            itemDirection: \"right-to-left\"\r\n          }\r\n        ]}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"50\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g>\r\n        <rect x={10} y={10} width={30} height={30} fill=\"red\" />\r\n        <text x={0} y={20} fill=\"black\">\r\n          Label\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Breadcrumb, Switch as Toggle } from \"antd\";\r\n\r\nimport Network from \"./Network\";\r\nimport History from \"./History\";\r\nimport Learn from \"../learn/Learn\";\r\n\r\nconst Explore = props => {\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/explore\">Explore</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/explore/history\">History</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Jan 15</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Layout style={{ padding: \"24px 0\", background: \"#fff\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/explore\" component={Network} />\r\n          <Route exact path=\"/explore/history\" component={History} />\r\n          <Route exact path=\"/explore/learn\" component={Learn} />\r\n        </Switch>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Explore);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Breadcrumb, Input } from \"antd\";\r\nimport { ResponsiveNetwork } from \"@nivo/network\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addElements, removeElement } from \"../../actions\";\r\n\r\nconst { Content } = Layout;\r\nconst nivo = ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'];\r\n\r\nconst Play = ({ graph, settings, addElements, removeElement }) => {\r\n  const {\r\n    repulsivity,\r\n    distanceMin,\r\n    distanceMax,\r\n    iterations,\r\n    borderWidth,\r\n    linkThickness,\r\n    animate,\r\n    motionStiffness,\r\n    motionDamping\r\n  } = settings;\r\n\r\n  const randomNode = () =>\r\n  graph.nodes[Math.floor(Math.random() * graph.nodes.length)] ?? {\r\n    id: \"smart\",\r\n    radius: 12,\r\n    depth: 1,\r\n    color: \"rgb(244, 117, 96)\"\r\n  };\r\n\r\n  const [entry, setEntry] = useState(\"\");\r\n  const [currentNode, setCurrentNode] = useState(randomNode());\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setEntry(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    // Extract unique tokens from entry, splitting on spaces\r\n    const tokens = [...new Set(e.target.value.split(\" \"))];\r\n\r\n    // Create new node for each token that does not already have one\r\n    const existingTokens = graph.nodes.map(n => n.id);\r\n    const newNodes = tokens\r\n      .filter(t => !existingTokens.includes(t))\r\n      .map(t => ({\r\n        id: t,\r\n        radius: 8,\r\n        depth: currentNode.depth + 1,\r\n        // color: \"rgb(97, 205, 187)\"\r\n        color: nivo[(currentNode.depth - 1) % nivo.length]\r\n        //   color: `hsl(${360 - (60 * currentNode.depth - 1)}, 40%, 60%)`\r\n      }));\r\n\r\n    // Create links from current node to each token's new or extant node\r\n    // TODO: Update distance for extant links to represent stronger association?\r\n    const existingLinks = graph.links\r\n      .filter(l => l.source === currentNode.id)\r\n      .map(l => l.target);\r\n    const newLinks = tokens\r\n      .filter(t => !existingLinks.includes(t))\r\n      .map(t => ({\r\n        source: currentNode.id,\r\n        target: t,\r\n        distance: 30\r\n      }));\r\n\r\n    addElements(newNodes, newLinks);\r\n    setEntry(\"\");\r\n    setCurrentNode(randomNode());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item>Play</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Quick Round</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Layout style={{ padding: \"0px 0px\", background: \"#fff\" }}>\r\n        <Content>\r\n          <TransformWrapper>\r\n            <TransformComponent>\r\n            <div style={{ height: (window.innerHeight - 282), width: (window.innerWidth - 100) }}>\r\n                <ResponsiveNetwork\r\n                  // height={700}\r\n                  nodes={graph.nodes}\r\n                  links={graph.links}\r\n                  repulsivity={repulsivity}\r\n                  distanceMin={distanceMin}\r\n                  distanceMax={distanceMax}\r\n                  iterations={iterations}\r\n                  nodeColor={n => n.color}\r\n                  nodeBorderWidth={borderWidth}\r\n                  nodeBorderColor={{\r\n                    from: \"color\",\r\n                    modifiers: [[\"darker\", 0.8]]\r\n                  }}\r\n                  linkThickness={\r\n                    linkThickness ?? (l => Math.ceil(4 / l.source.depth))\r\n                  }\r\n                  motionStiffness={motionStiffness}\r\n                  motionDamping={motionDamping}\r\n                  animate={animate}\r\n                  isInteractive={true}\r\n                />\r\n              </div>\r\n            </TransformComponent>\r\n          </TransformWrapper>\r\n          <Input\r\n            placeholder={`Define ${currentNode.id}`}\r\n            value={entry}\r\n            allowClear\r\n            onChange={handleChange}\r\n            onPressEnter={handleSubmit}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { settings: state.settings, graph: state.graph };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addElements, removeElement })(Play);\r\n","import { ADD_GRAPH_ELEMENTS, REMOVE_GRAPH_ELEMENT } from \"./types\";\r\n\r\nexport const addElements = (nodes = [], links = []) => {\r\n  return {\r\n    type: ADD_GRAPH_ELEMENTS,\r\n    payload: { nodes, links }\r\n  };\r\n};\r\n\r\nexport const removeElement = token => {\r\n  return {\r\n    type: REMOVE_GRAPH_ELEMENT,\r\n    payload: token\r\n  };\r\n};\r\n","import React from \"react\";\nimport { withRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport Explore from \"./explore/Explore\";\nimport Play from \"./play/Play\";\nimport Learn from \"./learn/Learn\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App = props => {\n  return (\n    <Layout>\n      <Header\n        className=\"header\"\n        style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n      >\n        <div className=\"logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          selectedKeys={[props.location.pathname.split(\"/\")[1]]}\n          style={{ lineHeight: \"64px\" }}\n        >\n          <Menu.Item key=\"play\">\n            <Link to=\"/play\">Play</Link>\n          </Menu.Item>\n          <Menu.Item key=\"explore\">\n            <Link to=\"/explore\">Explore</Link>\n          </Menu.Item>\n          <Menu.Item key=\"learn\">\n            <Link to=\"/learn\">Learn</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: \"64px 50px\", flexGrow: 1 }}>\n        <Switch>\n          <Route path=\"/play\" component={Play} />\n          <Route path=\"/explore\" component={Explore} />\n          <Route path=\"/learn\" component={Learn} />\n        </Switch>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        iWordNet ©2020 Created by Mark Chang & Tobias Fried\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default withRouter(App);\n","import { UPDATE_SETTING } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  repulsivity: 30,\r\n  distanceMin: 1,\r\n  distanceMax: 999,\r\n  iterations: 90,\r\n  borderWidth: 3,\r\n  linkThickness: 3,\r\n  animate: true,\r\n  motionStiffness: 100,\r\n  motionDamping: 10\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_SETTING:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_GRAPH_ELEMENTS, REMOVE_GRAPH_ELEMENT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  nodes: [{ id: \"smart\", radius: 12, depth: 1, color: \"rgb(244, 117, 96)\" }],\r\n  links: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_GRAPH_ELEMENTS:\r\n      return {\r\n        nodes: [...state.nodes, ...action.payload.nodes],\r\n        links: [...state.links, ...action.payload.links]\r\n      };\r\n    case REMOVE_GRAPH_ELEMENT:\r\n      const filteredNodes = state.nodes.filter(n => n.id !== action.payload);\r\n      const filteredLinks = state.links.filter(\r\n        l => l.source !== action.payload && l.target !== action.payload\r\n      );\r\n      return { nodes: filteredNodes, links: filteredLinks };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport settingsReducer from \"./settingsReducer\";\r\nimport graphReducer from \"./graphRecuder\";\r\n\r\nconst rootReducer = combineReducers({\r\n  settings: settingsReducer,\r\n  graph: graphReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport store from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}