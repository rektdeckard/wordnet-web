{"version":3,"sources":["aws-exports.js","components/Crumb.js","components/explore/History.js","components/Missing.js","components/explore/Explore.js","actions/settingsActions.js","actions/types.js","components/play/Play.js","actions/graphActions.js","components/learn/Learn.js","components/settings/Account.js","components/settings/Settings.js","components/Home.js","components/App.js","reducers/settingsReducer.js","reducers/graphReducer.js","reducers/index.js","index.js"],"names":["awsmobile","withRouter","location","children","match","crumbs","useMemo","segments","pathname","split","slice","map","s","i","path","join","segment","replace","c","toUpperCase","Item","key","length","to","style","margin","Content","Layout","History","useState","day","value","data","height","from","Date","setMonth","getMonth","emptyColor","colors","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","description","type","shape","Title","Typography","Paragraph","Text","statisticCards","title","precision","formatter","width","percent","format","suffix","valueStyle","color","prefix","exact","component","level","grid","gutter","xs","sm","md","dataSource","renderItem","item","hoverable","strong","render","updateSettings","settings","dispatch","payload","setDistanceMin","distanceMin","setDistanceMax","distanceMax","nivo","connect","state","graph","addElements","nodes","links","removeElement","token","repulsivity","iterations","borderWidth","linkThickness","animate","motionStiffness","motionDamping","randomNode","Math","floor","random","id","radius","depth","entry","setEntry","currentNode","setCurrentNode","padding","background","window","innerHeight","innerWidth","nodeColor","n","nodeBorderWidth","nodeBorderColor","modifiers","l","ceil","source","isInteractive","placeholder","allowClear","onChange","e","target","onPressEnter","tokens","Set","existingTokens","newNodes","filter","t","includes","existingLinks","newLinks","distance","Learn","icon","itemLayout","Meta","avatar","backgroundColor","validateFile","file","message","error","size","Account","user","Auth","attributes","image","setImage","loading","setLoading","useEffect","fetchImage","a","Storage","list","images","get","imageUrl","handleUpload","onProgress","onError","onSuccess","put","name","contentType","response","console","log","onChangeAttribute","attribute","updateUserAttributes","success","warn","uploadButton","className","bordered","span","minWidth","listType","showUploadList","customRequest","beforeUpload","src","editable","phone_number","email","address","SubMenu","Menu","Sider","setRepulsivity","setIterations","setBorderWidth","setLinkThickness","setAnimate","setMotionStiffness","setMotionDamping","props","collapsedWidth","breakpoint","mode","selectable","defaultOpenKeys","min","max","checked","doubleClick","linkColor","marginTop","display","flexDirection","alignItems","justifyContent","theme","fontSize","marginLeft","marginRight","Header","Footer","Analytics","record","position","zIndex","selectedKeys","lineHeight","pop","float","onClick","signOut","minHeight","Home","Crumb","Play","Explore","Settings","textAlign","INITIAL_STATE","rootReducer","combineReducers","action","filteredNodes","filteredLinks","store","createStore","applyMiddleware","thunk","Amplify","configure","awsconfig","AppWithAuthentication","withAuthenticator","App","signUpConfig","header","signUpFields","label","required","displayOrder","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.82b0502a.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_content_delivery_bucket\": \"wordnet-web-dev-20200124174830-hostingbucket-deva\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"http://wordnet-web-dev-20200124174830-hostingbucket-deva.s3-website-us-east-1.amazonaws.com\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:fc8e4229-6e14-43e2-b9bf-4f894c91a1c2\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_RfZuOJMxs\",\n    \"aws_user_pools_web_client_id\": \"3ec7hnj9ql9bsse3ci18rklmu3\",\n    \"oauth\": {},\n    \"aws_mobile_analytics_app_id\": \"41947d638dea42d28f1d528b05933204\",\n    \"aws_mobile_analytics_app_region\": \"us-east-1\",\n    \"aws_user_files_s3_bucket\": \"wordnet-web-dev6ba93794b4334c338ef75ccce209c62cdev-deva\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://zhybkaecyvcyvdqq6pjdf66x44.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React, { useMemo } from \"react\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nconst Crumb = ({ location, match, children }) => {\r\n  const crumbs = useMemo(() => {\r\n    const segments = location.pathname.split(\"/\").slice(1);\r\n    return segments.map((s, i) => {\r\n      const path = \"/\" + segments.slice(0, i + 1).join(\"/\");\r\n      const segment = s.replace(/^(.)/, c => c.toUpperCase()).replace(/_/g, \" \");\r\n      return (\r\n        <Breadcrumb.Item key={i}>\r\n          {i === segments.length - 1 ? (\r\n            segment\r\n          ) : (\r\n            <Link to={path}>{segment}</Link>\r\n          )}\r\n        </Breadcrumb.Item>\r\n      );\r\n    });\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>{crumbs}</Breadcrumb>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Crumb);\r\n","import React, { useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst History = () => {\r\n  const [data] = useState([\r\n    // { day: \"2019-01-03\", value: 2 },\r\n    // { day: \"2019-01-05\", value: 1 },\r\n    // { day: \"2019-01-06\", value: 2 },\r\n    // { day: \"2019-01-07\", value: 2 },\r\n    // { day: \"2019-01-09\", value: 4 },\r\n    // { day: \"2019-01-10\", value: 3 },\r\n    // { day: \"2019-01-11\", value: 1 },\r\n    // { day: \"2019-01-12\", value: 2 },\r\n    // { day: \"2019-01-13\", value: 1 },\r\n    // { day: \"2019-01-16\", value: 1 },\r\n    // { day: \"2019-01-18\", value: 3 },\r\n    // { day: \"2019-01-19\", value: 3 },\r\n    // { day: \"2019-01-20\", value: 1 },\r\n    // { day: \"2019-01-21\", value: 2 },\r\n    // { day: \"2019-01-23\", value: 2 },\r\n    // { day: \"2019-01-24\", value: 5 },\r\n    // { day: \"2019-01-25\", value: 4 },\r\n    // { day: \"2019-01-30\", value: 2 },\r\n    // { day: \"2019-01-31\", value: 1 },\r\n    // { day: \"2019-02-03\", value: 2 },\r\n    // { day: \"2019-02-03\", value: 4 },\r\n    // { day: \"2019-02-03\", value: 1 },\r\n    { day: \"2020-01-03\", value: 2 },\r\n    { day: \"2020-01-05\", value: 2 },\r\n    { day: \"2020-01-06\", value: 1 },\r\n    { day: \"2020-01-07\", value: 3 },\r\n    { day: \"2020-01-07\", value: 3 },\r\n  ]);\r\n\r\n  return (\r\n    <Content style={{ height: 700 }}>\r\n      <ResponsiveCalendar\r\n        data={data}\r\n        // from={new Date(new Date().setFullYear(new Date().getFullYear() - 1))}\r\n        // to={new Date()}\r\n        from={new Date()}\r\n        to={new Date(new Date().setMonth(new Date().getMonth() + 2))}\r\n        emptyColor=\"#eeeeee\"\r\n        colors={[\"#61cdbb\", \"#97e3d5\", \"#e8c1a0\", \"#f47560\"]}\r\n        margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n        yearSpacing={40}\r\n        monthBorderColor=\"#ffffff\"\r\n        dayBorderWidth={2}\r\n        dayBorderColor=\"#ffffff\"\r\n        legends={[\r\n          {\r\n            anchor: \"bottom-right\",\r\n            direction: \"row\",\r\n            translateY: 36,\r\n            itemCount: 4,\r\n            itemWidth: 42,\r\n            itemHeight: 36,\r\n            itemsSpacing: 14,\r\n            itemDirection: \"right-to-left\"\r\n          }\r\n        ]}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Empty, Button } from \"antd\";\r\n\r\nconst Missing = ({ match, style  }) => {\r\n  return (\r\n    <Empty\r\n      style={style}\r\n      description={<span>Whoops. That doesn't exist.</span>}\r\n    >\r\n      <Button type=\"primary\" shape=\"round\">\r\n        <Link to={match.path}>Go back</Link>\r\n      </Button>\r\n    </Empty>\r\n  );\r\n};\r\n\r\nexport default withRouter(Missing);\r\n","import React from \"react\";\r\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Divider,\r\n  Progress,\r\n  Statistic,\r\n  Card,\r\n  List,\r\n  Icon\r\n} from \"antd\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n\r\nimport History from \"./History\";\r\nimport Missing from \"../Missing\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst Explore = () => {\r\n  const statisticCards = [\r\n    <Statistic\r\n      title=\"Goal progress\"\r\n      value={68}\r\n      precision={0}\r\n      formatter={value => (\r\n        <Progress\r\n          style={{ margin: 16 }}\r\n          type=\"circle\"\r\n          width={100}\r\n          percent={value}\r\n          // successPercent={20}\r\n          format={percent => `${percent}%`}\r\n        />\r\n      )}\r\n      suffix=\"toward checking in every day this month!\"\r\n    />,\r\n    <Statistic\r\n      title=\"Activity this week\"\r\n      value={11.28}\r\n      // value={-11.28}\r\n      precision={1}\r\n      valueStyle={{ color: \"#51bdab\" }}\r\n      // valueStyle={{ color: \"#f47560\" }}\r\n      prefix={<Icon type=\"arrow-up\" />}\r\n      // prefix={<Icon type=\"arrow-down\" />}\r\n      suffix=\"%\"\r\n    />,\r\n    <Statistic\r\n      title=\"Words logged\"\r\n      value={1023}\r\n      precision={0}\r\n      prefix={<Icon type=\"message\" />}\r\n    />\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/explore\"\r\n          component={() => (\r\n            <Typography>\r\n              <Title level={2}>Your Stats</Title>\r\n              <Paragraph>\r\n                Challenge yourself by setting{\" \"}\r\n                <Link to=\"/explore/goals\">goals</Link> and staying on target.\r\n                Gain perspective on your personality and cognitive abilities by\r\n                checking your <Link to=\"/explore/insights\">insights</Link>.\r\n              </Paragraph>\r\n              <List\r\n                grid={{\r\n                  gutter: 16,\r\n                  xs: 1,\r\n                  sm: 2,\r\n                  md: 3\r\n                }}\r\n                dataSource={statisticCards}\r\n                renderItem={item => (\r\n                  <List.Item>\r\n                    <Card hoverable>{item}</Card>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <Divider />\r\n              <Title level={2}>Recent Activity</Title>\r\n              <Paragraph>\r\n                Click on a calendar entry to view your activity for that day, or\r\n                see your <Link to=\"/explore/history\">complete history</Link>.\r\n              </Paragraph>\r\n              <Card hoverable>\r\n                <Link to=\"/explore/history\">\r\n                  <div style={{ height: 200 }}>\r\n                    <ResponsiveCalendar\r\n                      data={[\r\n                        { day: \"2020-01-03\", value: 2 },\r\n                        { day: \"2020-01-06\", value: 1 },\r\n                        { day: \"2020-01-07\", value: 3 },\r\n                        { day: \"2020-01-08\", value: 3 },\r\n                        { day: \"2020-01-09\", value: 1 },\r\n                        { day: \"2020-01-10\", value: 4 },\r\n                        { day: \"2020-01-13\", value: 1 },\r\n                        { day: \"2020-01-14\", value: 2 },\r\n                        { day: \"2020-01-15\", value: 1 },\r\n                        { day: \"2020-01-17\", value: 2 },\r\n                        { day: \"2020-01-20\", value: 2 },\r\n                        { day: \"2020-01-21\", value: 4 },\r\n                        { day: \"2020-01-22\", value: 1 },\r\n                        { day: \"2020-01-23\", value: 2 },\r\n                        { day: \"2020-01-24\", value: 1 },\r\n                        { day: \"2020-01-27\", value: 1 },\r\n                        { day: \"2020-01-28\", value: 2 },\r\n                        { day: \"2020-01-29\", value: 2 },\r\n                        { day: \"2020-01-30\", value: 3 },\r\n                        { day: \"2020-02-01\", value: 1 }\r\n                      ]}\r\n                      from={new Date()}\r\n                      to={\r\n                        new Date(new Date().setMonth(new Date().getMonth() + 2))\r\n                      }\r\n                      emptyColor=\"#eeeeee\"\r\n                      colors={[\r\n                        \"#61cdbb\",\r\n                        \"#97e3d5\",\r\n                        \"#e8c1a0\",\r\n                        \"#ff9980\",\r\n                        \"#f47560\"\r\n                      ]}\r\n                      margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n                      yearSpacing={40}\r\n                      monthBorderColor=\"#ffffff\"\r\n                      dayBorderWidth={2}\r\n                      dayBorderColor=\"#ffffff\"\r\n                      legends={[\r\n                        {\r\n                          anchor: \"bottom-right\",\r\n                          direction: \"row\",\r\n                          translateY: 36,\r\n                          itemCount: 5,\r\n                          itemWidth: 42,\r\n                          itemHeight: 36,\r\n                          itemsSpacing: 14,\r\n                          itemDirection: \"right-to-left\"\r\n                        }\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </Link>\r\n              </Card>\r\n              <Divider />\r\n              <Title level={2}>Explore</Title>\r\n              <Paragraph>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Dictum sit amet justo donec enim diam vulputate ut pharetra.\r\n                Neque ornare aenean euismod elementum nisi quis eleifend.\r\n                Malesuada pellentesque elit eget gravida cum sociis natoque\r\n                penatibus et. Quisque id diam vel quam elementum pulvinar etiam\r\n                non quam. Ut lectus arcu bibendum at varius vel pharetra.\r\n                Adipiscing tristique risus nec feugiat in fermentum posuere urna\r\n                nec. Laoreet sit amet cursus sit. Est sit amet facilisis magna\r\n                etiam. Sollicitudin nibh sit amet commodo. Vitae semper quis\r\n                lectus nulla at volutpat diam. In nulla posuere{\" \"}\r\n                <Text strong>sollicitudin</Text> aliquam. Maecenas volutpat\r\n                blandit aliquam etiam erat.\r\n              </Paragraph>\r\n              <Paragraph>\r\n                Sit amet nisl purus in mollis nunc sed. Turpis massa sed\r\n                elementum tempus egestas sed sed risus pretium. Viverra nibh\r\n                cras pulvinar mattis nunc. Amet risus nullam eget felis eget\r\n                nunc lobortis. Dolor sed viverra ipsum nunc. In metus vulputate\r\n                eu <Text strong>scelerisque</Text> felis imperdiet proin.\r\n                Ridiculus mus mauris vitae ultricies leo integer malesuada nunc\r\n                vel. Ridiculus mus mauris vitae ultricies leo. Etiam non quam\r\n                lacus suspendisse faucibus interdum posuere lorem ipsum. Lacus\r\n                vel facilisis volutpat est. Facilisis leo vel fringilla est\r\n                ullamcorper eget nulla facilisi etiam. Cursus turpis massa\r\n                tincidunt dui ut ornare. Scelerisque fermentum dui faucibus in\r\n                ornare quam viverra orci.\r\n              </Paragraph>\r\n            </Typography>\r\n          )}\r\n        />\r\n        <Route exact path=\"/explore/history\" component={History} />\r\n        <Route render={() => <Missing />} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Explore);\r\n","import { UPDATE_SETTING } from \"../actions/types\";\r\n\r\nconst updateSettings = settings => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_SETTING,\r\n    payload: settings\r\n  });\r\n};\r\n\r\n// TODO: Implement extra validation on each property, even though the UI layer should it too?\r\n\r\nexport const setRepulsivity = repulsivity => dispatch => {\r\n  dispatch(updateSettings({ repulsivity }));\r\n};\r\n\r\nexport const setDistanceMin = distanceMin => dispatch => {\r\n  dispatch(updateSettings({ distanceMin }));\r\n};\r\n\r\nexport const setDistanceMax = distanceMax => dispatch => {\r\n  dispatch(updateSettings({ distanceMax }));\r\n};\r\n\r\nexport const setIterations = iterations => dispatch => {\r\n  dispatch(updateSettings({ iterations }));\r\n};\r\n\r\nexport const setBorderWidth = borderWidth => dispatch => {\r\n  dispatch(updateSettings({ borderWidth }));\r\n};\r\n\r\nexport const setLinkThickness = linkThickness => dispatch => {\r\n  if (!linkThickness) linkThickness = 1;\r\n  if (linkThickness > 20) linkThickness = 20;\r\n  dispatch(updateSettings({ linkThickness }));\r\n};\r\n\r\nexport const setAnimate = animate => dispatch => {\r\n  dispatch(updateSettings({ animate }));\r\n};\r\n\r\nexport const setMotionStiffness = motionStiffness => dispatch => {\r\n  dispatch(updateSettings({ motionStiffness }));\r\n};\r\n\r\nexport const setMotionDamping = motionDamping => dispatch => {\r\n  dispatch(updateSettings({ motionDamping }));\r\n};\r\n","export const UPDATE_SETTING = \"update_setting\";\r\n\r\nexport const ADD_GRAPH_ELEMENTS = \"add_graph_elements\";\r\nexport const REMOVE_GRAPH_ELEMENT = \"remove_graph_element\";\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Input } from \"antd\";\r\nimport { ResponsiveNetwork } from \"@nivo/network\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addElements, removeElement } from \"../../actions\";\r\n\r\nconst { Content } = Layout;\r\nconst nivo = [\"#e8c1a0\", \"#f47560\", \"#f1e15b\", \"#e8a838\", \"#61cdbb\", \"#97e3d5\"];\r\n\r\nconst Play = ({ graph, settings, addElements, removeElement }) => {\r\n  const {\r\n    repulsivity,\r\n    distanceMin,\r\n    distanceMax,\r\n    iterations,\r\n    borderWidth,\r\n    linkThickness,\r\n    animate,\r\n    motionStiffness,\r\n    motionDamping\r\n  } = settings;\r\n\r\n  const randomNode = () =>\r\n    graph.nodes[Math.floor(Math.random() * graph.nodes.length)] ?? {\r\n      id: \"smart\",\r\n      radius: 12,\r\n      depth: 1,\r\n      color: \"rgb(244, 117, 96)\"\r\n    };\r\n\r\n  const [entry, setEntry] = useState(\"\");\r\n  const [currentNode, setCurrentNode] = useState(randomNode());\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setEntry(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    // Extract unique tokens from entry, splitting on spaces\r\n    const tokens = [...new Set(e.target.value.split(\" \"))];\r\n\r\n    // Create new node for each token that does not already have one\r\n    const existingTokens = graph.nodes.map(n => n.id);\r\n    const newNodes = tokens\r\n      .filter(t => !existingTokens.includes(t))\r\n      .map(t => ({\r\n        id: t,\r\n        radius: 8,\r\n        depth: currentNode.depth + 1,\r\n        // color: \"rgb(97, 205, 187)\"\r\n        color: nivo[(currentNode.depth - 1) % nivo.length]\r\n        //   color: `hsl(${360 - (60 * currentNode.depth - 1)}, 40%, 60%)`\r\n      }));\r\n\r\n    // Create links from current node to each token's new or extant node\r\n    // TODO: Update distance for extant links to represent stronger association?\r\n    const existingLinks = graph.links\r\n      .filter(l => l.source === currentNode.id)\r\n      .map(l => l.target);\r\n    const newLinks = tokens\r\n      .filter(t => !existingLinks.includes(t))\r\n      .map(t => ({\r\n        source: currentNode.id,\r\n        target: t,\r\n        distance: 30\r\n      }));\r\n\r\n    addElements(newNodes, newLinks);\r\n    setEntry(\"\");\r\n    setCurrentNode(randomNode());\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ padding: \"0px 0px\", background: \"#fff\" }}>\r\n      <Content>\r\n        <TransformWrapper>\r\n          <TransformComponent>\r\n            <div\r\n              style={{\r\n                height: window.innerHeight - 282,\r\n                width: window.innerWidth - 100\r\n              }}\r\n            >\r\n              <ResponsiveNetwork\r\n                // height={700}\r\n                nodes={graph.nodes}\r\n                links={graph.links}\r\n                repulsivity={repulsivity}\r\n                distanceMin={distanceMin}\r\n                distanceMax={distanceMax}\r\n                iterations={iterations}\r\n                nodeColor={n => n.color}\r\n                nodeBorderWidth={borderWidth}\r\n                nodeBorderColor={{\r\n                  from: \"color\",\r\n                  modifiers: [[\"darker\", 0.8]]\r\n                }}\r\n                linkThickness={\r\n                  linkThickness ?? (l => Math.ceil(4 / l.source.depth))\r\n                }\r\n                motionStiffness={motionStiffness}\r\n                motionDamping={motionDamping}\r\n                animate={animate}\r\n                isInteractive={true}\r\n              />\r\n            </div>\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n        <Input\r\n          placeholder={`Define ${currentNode.id}`}\r\n          value={entry}\r\n          allowClear\r\n          onChange={handleChange}\r\n          onPressEnter={handleSubmit}\r\n        />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { settings: state.settings, graph: state.graph };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addElements, removeElement })(Play);\r\n","import { ADD_GRAPH_ELEMENTS, REMOVE_GRAPH_ELEMENT } from \"./types\";\r\n\r\nexport const addElements = (nodes = [], links = []) => {\r\n  return {\r\n    type: ADD_GRAPH_ELEMENTS,\r\n    payload: { nodes, links }\r\n  };\r\n};\r\n\r\nexport const removeElement = token => {\r\n  return {\r\n    type: REMOVE_GRAPH_ELEMENT,\r\n    payload: token\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Layout, List, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Learn = () => {\r\n  const data = [\r\n    {\r\n      title: \"What is a WordNet?\",\r\n      icon: \"question-circle\",\r\n      description: (\r\n        <>\r\n          <p>\r\n            One of the main challenges in artificial intelligence or\r\n            computational linguistics is understanding the meaning of a word or\r\n            concept.\r\n          </p>\r\n\r\n          <p>\r\n            The connotation of the term understanding, or the meaning of the\r\n            word meaning, is merely a word mapping game due to unavoidable\r\n            circular definitions. These circular definitions arise when an\r\n            individual defines a concept, the concepts in its definition, and so\r\n            on, eventually one will exhaust all the words/concepts he and has to\r\n            reuse previously used words.\r\n          </p>\r\n\r\n          <p>\r\n            By connecting the associated words, a personalized network of\r\n            concepts (called a WordNet) is formed for the individual. Such a\r\n            WordNet serves as an external representation of an individual’s\r\n            knowledge and state of mind at the time of the network construction.\r\n          </p>\r\n\r\n          <p>\r\n            Path of Understanding in a WordNet that characterizes an\r\n            individual’s understanding of a complex concept such as a written\r\n            passage. Understanding and knowledge can be regarded as a calculable\r\n            statistical property of WordNet topology.\r\n          </p>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      title: \"Benefits of WordNet\",\r\n      icon: \"smile\",\r\n      description: \"\"\r\n    },\r\n    {\r\n      title: \"Potential Applications\",\r\n      icon: \"experiment\",\r\n      description: (\r\n        <ul>\r\n          <li>Evaluating one's knowledge over time</li>\r\n          <li>Evaluating one's personality over time</li>\r\n          <li>Analyzing the cognitive imparments of patients or the elderly</li>\r\n          <li>Studying why people have different skills</li>\r\n          <li>\r\n            Comparing knowledge between individuals to improve teaching and\r\n            learning\r\n          </li>\r\n          <li>\r\n            Study demographic differences across ethnic, gender, and age groups\r\n          </li>\r\n          <li>Study people with communication deficiencies</li>\r\n          <li>\r\n            Augment neurological and psychological research and treatments\r\n          </li>\r\n          <li>Study the process of knowledge acquisition</li>\r\n          <li>\r\n            Create robots that truly understand humans, or at least use words\r\n            and concepts in the same way\r\n          </li>\r\n          <li>\r\n            Strudy organizational behaviors and emergent properties like\r\n            collective intelligence\r\n          </li>\r\n        </ul>\r\n      )\r\n    },\r\n    {\r\n      title: \"Commercial Product\",\r\n      icon: \"dollar\",\r\n      description: \"\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout style={{ padding: \"24px 24px\", background: \"#fff\" }}>\r\n      <Content>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={data}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar\r\n                    style={{\r\n                      color: \"#1890FFDD\",\r\n                      backgroundColor: \"#1890FF22\"\r\n                    }}\r\n                    icon={item.icon}\r\n                  />\r\n                }\r\n                title={<Link to=\"/explore\">{item.title}</Link>}\r\n                description={item.description}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Amplify, { Storage, Auth } from \"aws-amplify\";\r\nimport { S3Album, S3Image } from \"aws-amplify-react\";\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Card,\r\n  Avatar,\r\n  Upload,\r\n  Icon,\r\n  message,\r\n  List,\r\n  Col\r\n} from \"antd\";\r\n\r\nconst { Text, Paragraph, Title } = Typography;\r\n\r\nconst Account = () => {\r\n  const user = Auth.user.attributes;\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchImage();\r\n  }, []);\r\n\r\n  const fetchImage = async () => {\r\n    setLoading(true);\r\n    const images = await Storage.list(\"profile/\", { level: \"protected\" });\r\n    if (images.length) {\r\n      const imageUrl = await Storage.get(images[0].key, { level: \"protected\" });\r\n      setImage(imageUrl);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleUpload = async ({ onProgress, onError, onSuccess, file }) => {\r\n    if (file) {\r\n      const response = await Storage.put(`profile/${file.name}`, file, {\r\n        contentType: \"image/*\",\r\n        level: \"protected\"\r\n      });\r\n      console.log(response);\r\n      fetchImage();\r\n    }\r\n  };\r\n\r\n  const onChangeAttribute = async (attribute, value) => {\r\n    if (user[attribute] === value) return;\r\n\r\n    try {\r\n      const response = await Auth.updateUserAttributes(Auth.user, {\r\n        [attribute]: value\r\n      });\r\n      if (response === \"SUCCESS\") message.success(`Updated ${attribute}`);\r\n      else message.warn(`Could not update ${attribute}`);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n    // TODO: Refresh Auth!!\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Icon type={loading ? \"loading\" : \"plus\"} />\r\n      {loading ? null : <div className=\"ant-upload-text\">Upload</div>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <Card title=\"User Details\" bordered={false}>\r\n        <Col span={4} style={{ minWidth: 128 }}>\r\n          <Upload\r\n            name=\"image\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            customRequest={handleUpload}\r\n            beforeUpload={validateFile}\r\n          >\r\n            {image ? (\r\n              <Avatar\r\n                src={image}\r\n                shape=\"square\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Col>\r\n        <Col span={20}>\r\n          <List itemLayout=\"horizontal\" size=\"small\">\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title=\"Name\"\r\n                description={\r\n                  <Paragraph\r\n                    editable={{\r\n                      onChange: value => onChangeAttribute(\"name\", value)\r\n                    }}\r\n                  >\r\n                    {user.name}\r\n                  </Paragraph>\r\n                }\r\n              />\r\n            </List.Item>\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title=\"Phone\"\r\n                description={\r\n                  <Paragraph\r\n                    editable={{\r\n                      onChange: value =>\r\n                        onChangeAttribute(\"phone_number\", value)\r\n                    }}\r\n                  >\r\n                    {user.phone_number}\r\n                  </Paragraph>\r\n                }\r\n              />\r\n            </List.Item>\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title=\"Email\"\r\n                description={\r\n                  <Paragraph\r\n                    editable={{\r\n                      onChange: value => onChangeAttribute(\"email\", value)\r\n                    }}\r\n                  >\r\n                    {user.email}\r\n                  </Paragraph>\r\n                }\r\n              />\r\n            </List.Item>\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title=\"Address\"\r\n                description={\r\n                  <Paragraph\r\n                    editable={{\r\n                      onChange: value => onChangeAttribute(\"address\", value)\r\n                    }}\r\n                  >\r\n                    {user.address ?? \"Not provided\"}\r\n                  </Paragraph>\r\n                }\r\n              />\r\n            </List.Item>\r\n          </List>\r\n        </Col>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nfunction validateFile(file) {\r\n  if (!file.type === \"image/*\") {\r\n    message.error(\"Unsupported file type!\");\r\n    return false;\r\n  }\r\n  if (!(file.size / 1024 / 1024 < 4)) {\r\n    message.error(\"Image must smaller than 4MB!\");\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResponsiveNetwork } from \"@nivo/network\";\r\nimport { Layout, Menu, Icon, InputNumber, Row, Col, Switch } from \"antd\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\n\r\nimport data from \"../../data/sample3.json\";\r\nimport {\r\n  setRepulsivity,\r\n  setDistanceMin,\r\n  setDistanceMax,\r\n  setIterations,\r\n  setBorderWidth,\r\n  setLinkThickness,\r\n  setAnimate,\r\n  setMotionStiffness,\r\n  setMotionDamping\r\n} from \"../../actions\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\n// const nivo = ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'];\r\n\r\nconst Settings = props => {\r\n  const {\r\n    repulsivity,\r\n    distanceMin,\r\n    distanceMax,\r\n    iterations,\r\n    borderWidth,\r\n    linkThickness,\r\n    animate,\r\n    motionStiffness,\r\n    motionDamping\r\n  } = props.settings;\r\n\r\n  const handleChangeDistance = value => {\r\n    setDistanceMin(value[0]);\r\n    setDistanceMax(value[1]);\r\n  };\r\n\r\n  const renderSider = () => (\r\n    <Sider\r\n      style={{ background: \"#fff\" }}\r\n      width={300}\r\n      collapsedWidth={0}\r\n      breakpoint=\"lg\"\r\n    >\r\n      <Menu\r\n        mode=\"inline\"\r\n        selectable={false}\r\n        defaultOpenKeys={[\"sim\"]}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <SubMenu\r\n          key=\"sim\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"dot-chart\" />\r\n              Simulation\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"1\">\r\n            <Row>\r\n              <Col span={12}>Repulsivity</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={100}\r\n                  value={repulsivity}\r\n                  onChange={props.setRepulsivity}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Row>\r\n              <Col span={12}>Distance Min</Col>\r\n              <Col span={4}>\r\n                {\" \"}\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={9999}\r\n                  value={distanceMin}\r\n                  onChange={props.setDistanceMin}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Row>\r\n              <Col span={12}>Distance Max</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={9999}\r\n                  value={distanceMax}\r\n                  onChange={props.setDistanceMax}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            <Row>\r\n              <Col span={12}>Iterations</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={60}\r\n                  max={260}\r\n                  value={iterations}\r\n                  onChange={props.setIterations}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"nodes\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"ellipsis\" />\r\n              Nodes\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"5\">\r\n            <Row>\r\n              <Col span={12}>Border Width</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={20}\r\n                  value={borderWidth}\r\n                  onChange={props.setBorderWidth}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"links\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"fork\" />\r\n              Links\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"6\">\r\n            <Row>\r\n              <Col span={12}>Link Thickness</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={1}\r\n                  max={20}\r\n                  value={linkThickness}\r\n                  onChange={props.setLinkThickness}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"motion\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"double-right\" />\r\n              Motion\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"7\">\r\n            <Row>\r\n              <Col span={12}>Animate</Col>\r\n              <Col span={4}>\r\n                <Switch\r\n                  size=\"small\"\r\n                  checked={animate}\r\n                  onChange={props.setAnimate}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"8\">\r\n            <Row>\r\n              <Col span={12}>Motion Stiffness</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={300}\r\n                  value={motionStiffness}\r\n                  onChange={props.setMotionStiffness}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"9\">\r\n            <Row>\r\n              <Col span={12}>Motion Damping</Col>\r\n              <Col span={4}>\r\n                <InputNumber\r\n                  size=\"small\"\r\n                  min={0}\r\n                  max={40}\r\n                  value={motionDamping}\r\n                  onChange={props.setMotionDamping}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n\r\n  // TODO: Implement window-resize event hook to properly size the container div\r\n  return (\r\n    <Layout style={{ padding: \"24px 0\", background: \"#fff\" }}>\r\n      {renderSider()}\r\n      <Content>\r\n        <TransformWrapper doubleClick={{ mode: \"reset\" }}>\r\n          <TransformComponent>\r\n            <div\r\n              style={{\r\n                height: window.innerHeight - 300,\r\n                width: window.innerWidth - 400\r\n              }}\r\n            >\r\n              <ResponsiveNetwork\r\n                // height={2000}\r\n                // width={3000}\r\n                nodes={data.nodes}\r\n                links={data.links}\r\n                repulsivity={repulsivity}\r\n                distanceMin={distanceMin}\r\n                distanceMax={distanceMax}\r\n                iterations={iterations}\r\n                nodeColor={n => n.color}\r\n                // nodeColor={n => `hsl(${360 - (60 * n.depth - 1)}, 40%, 60%)`}\r\n                // nodeColor={n => nivo[n.depth]}\r\n                nodeBorderWidth={borderWidth}\r\n                nodeBorderColor={{\r\n                  from: \"color\",\r\n                  modifiers: [[\"darker\", 0.8]]\r\n                }}\r\n                // nodeBorderColor={n => `hsl(${360 - (60 * n.depth - 1)}, 40%, 30%)`}\r\n                // nodeBorderColor={n => nivo[n.depth]}\r\n                linkColor={t => t.source.color}\r\n                // linkColor={n => `hsl(${360 - (2 * n.distance)}, 40%, 30%)`}\r\n                linkThickness={linkThickness ?? (l => 2 * (2 - l.source.depth))}\r\n                motionStiffness={motionStiffness}\r\n                motionDamping={motionDamping}\r\n                animate={animate}\r\n              />\r\n            </div>\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { settings: state.settings };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setRepulsivity,\r\n  setDistanceMin,\r\n  setDistanceMax,\r\n  setIterations,\r\n  setBorderWidth,\r\n  setLinkThickness,\r\n  setAnimate,\r\n  setMotionStiffness,\r\n  setMotionDamping\r\n})(Settings);\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, List, Button, Icon } from \"antd\";\r\n\r\nconst { Content } = Layout;\r\nconst { Text } = Typography;\r\n\r\nconst Home = () => {\r\n  const destinationCards = [\r\n    {\r\n      title: \"Quick Play\",\r\n      icon: \"rocket\",\r\n      path: \"/play\",\r\n      description:\r\n        \"Jump into a quick 5-minute game to get the creative juices flowing\"\r\n    },\r\n    {\r\n      title: \"Insights\",\r\n      icon: \"thunderbolt\",\r\n      path: \"/explore/insights\",\r\n      description:\r\n        \"Gain perspective on your personality and cognitive abilities through analysis of your data\"\r\n    },\r\n    {\r\n      title: \"Goals\",\r\n      icon: \"trophy\",\r\n      path: \"explore/goals\",\r\n      description:\r\n        \"Challenge yourself to login a few times a week, expand your vocabulary, or increase your speed\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <Content style={{ marginTop: 128 }}>\r\n        <List\r\n          grid={{\r\n            gutter: 16,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 3\r\n          }}\r\n          dataSource={destinationCards}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\"\r\n                }}\r\n              >\r\n                <Icon\r\n                  type={item.icon}\r\n                  theme=\"twoTone\"\r\n                  style={{ marginTop: 32, fontSize: 64 }}\r\n                />\r\n                <Button type=\"primary\" shape=\"round\" style={{ margin: 16 }}>\r\n                  <Link to={item.path}>{item.title}</Link>\r\n                </Button>\r\n                <Text style={{ fontSize: 12, marginLeft: 4, marginRight: 4 }}>\r\n                  {item.description}\r\n                </Text>\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { withRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Analytics, Auth } from \"aws-amplify\";\r\n\r\nimport Crumb from \"./Crumb\";\r\nimport Explore from \"./explore/Explore\";\r\nimport Play from \"./play/Play\";\r\nimport Learn from \"./learn/Learn\";\r\nimport Account from \"./settings/Account\";\r\nimport Settings from \"./settings/Settings\";\r\nimport Missing from \"./Missing\";\r\nimport Home from \"./Home\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst App = props => {\r\n  const {location} = props;\r\n  // Add analytics tracker\r\n  useEffect(() => {\r\n    Analytics.record(\"page_load\");\r\n  }, []);\r\n\r\n  // Get final path segment to show active menu item\r\n  const segment = useMemo(() => location.pathname.split(\"/\")[1], [location]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header\r\n        className=\"header\"\r\n        style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          selectedKeys={[segment]}\r\n          style={{ lineHeight: \"64px\" }}\r\n        >\r\n          <Menu.Item key=\"play\">\r\n            <Link to=\"/play\">Play</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"explore\">\r\n            <Link to=\"/explore\">Explore</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"learn\">\r\n            <Link to=\"/learn\">Learn</Link>\r\n          </Menu.Item>\r\n          <Menu.SubMenu\r\n            selectedKeys={[location.pathname.split(\"/\").pop()]}\r\n            style={{ float: \"right\" }}\r\n            title={\r\n              <span>\r\n                <Icon type=\"setting\" />\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"account\">\r\n              <Link to=\"/account\">Account</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"settings\">\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"signout\">\r\n              <Link to=\"/\" onClick={() => Auth.signOut()}>\r\n                Sign Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </Menu.SubMenu>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: \"64px 50px\", minHeight: \"100vh\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route render={Crumb} />\r\n        </Switch>\r\n        <Switch>\r\n          <Route path=\"/play\" component={Play} />\r\n          <Route path=\"/explore\" component={Explore} />\r\n          <Route path=\"/learn\" component={Learn} />\r\n          <Route path=\"/account\" component={Account} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route exact path=\"/\" component={null}/>\r\n          <Route render={() => <Missing style={{ marginTop: 52}}/>} />\r\n        </Switch>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        iWordNet ©2020 Created by Mark Chang & Tobias Fried\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { UPDATE_SETTING } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  repulsivity: 30,\r\n  distanceMin: 1,\r\n  distanceMax: 999,\r\n  iterations: 90,\r\n  borderWidth: 3,\r\n  linkThickness: 3,\r\n  animate: true,\r\n  motionStiffness: 100,\r\n  motionDamping: 10\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_SETTING:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_GRAPH_ELEMENTS, REMOVE_GRAPH_ELEMENT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  nodes: [{ id: \"smart\", radius: 12, depth: 1, color: \"rgb(244, 117, 96)\" }],\r\n  links: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_GRAPH_ELEMENTS:\r\n      return {\r\n        nodes: [...state.nodes, ...action.payload.nodes],\r\n        links: [...state.links, ...action.payload.links]\r\n      };\r\n    case REMOVE_GRAPH_ELEMENT:\r\n      const filteredNodes = state.nodes.filter(n => n.id !== action.payload);\r\n      const filteredLinks = state.links.filter(\r\n        l => l.source !== action.payload && l.target !== action.payload\r\n      );\r\n      return { nodes: filteredNodes, links: filteredLinks };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport settingsReducer from \"./settingsReducer\";\r\nimport graphReducer from \"./graphReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  settings: settingsReducer,\r\n  graph: graphReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './aws-exports';\r\nimport { withAuthenticator } from 'aws-amplify-react';\r\n\r\nimport App from \"./components/App\";\r\nimport store from \"./reducers\";\r\n\r\nAmplify.configure(awsconfig);\r\n\r\nconst signUpConfig = {\r\n  header: \"Create a new WordNet account\",\r\n  signUpFields: [\r\n    {\r\n      label: 'Name',\r\n      key: 'name',\r\n      required: true,\r\n      displayOrder: 1,\r\n      type: 'string'\r\n    },\r\n    {\r\n      label: 'Email',\r\n      key: 'email',\r\n      required: true,\r\n      displayOrder: 2,\r\n      type: 'string'\r\n    },\r\n    {\r\n      label: 'Password',\r\n      key: 'password',\r\n      required: true,\r\n      displayOrder: 3,\r\n      type: 'password'\r\n    },\r\n    {\r\n      label: 'Phone Number',\r\n      key: 'phone_number',\r\n      required: true,\r\n      displayOrder: 4,\r\n      type: 'string'\r\n    }\r\n  ]\r\n};\r\n\r\nconst AppWithAuthentication = withAuthenticator(App, { signUpConfig });\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <AppWithAuthentication />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}